FACILITIES-APP 

1. Chiamata ad un API (axios, useEffect())
2. Visualizzazione a schermo dei risultati (useState()/map())
- separare facility da facilitiesList
3. Search box (useState()/filter()/MUI)
4. Gestione loading/errors (MUI, useState())
5. Modale per la modifica dei dati. Riceve i dati di volta in volta (childToParent(), useState(), map(), MUI)
- la modale compare un sola volta, a lvl del conditional rendering di facility
6. I campi della modale devono avere il value della facility cliccata
7. Separare le pagine: una per facilitiesList e una per facilityDetail. In facilityDetail chiamare una nuova api per la visualizzazione di altri dati. Gestire il path (react-router, useParams())
8. Conditional rendering della modale (ternary operator)
9. Migliora la visualizzazione delle date (date-fns)
10. Custom hooks per la gestione della modale (useModal()), e per la gestione di loding ed error (useApi())
- useContext()
11. ampliare e gestire meglio useApi e api in generale: - una f per ogni api che mi serve (getFacilities e getFacility)
- f generica che fa fisicamente la chiamata (utilizzando axios)
(es flusso: da facilitiesList.jsx chiamo getFacilties da api.js, che chiama il custom hook useApi(), che chiama la f per la chiamata generica
- useApi deve andare bene per qualsiasi tipo di dato (rinominare facilities e setFacilities in data, setData).
- useReducer() per gestire gli stati multipli



???
L'api che mi permette di creare una nuova facility sar√† una post facility. 
